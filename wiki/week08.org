#+TITLE: Week 8
* Saturday, July 6th
@!(ref "logs" "logs" "2024_07_06")!@

kickstart neovim /
slider groups typescript react /
rust-analyzer

** Neovim setup
task: @!(taskref "investigate-kickstart-neovim")!@.

Got a neovim setup working with kickstart,
language server works for both Rust (rust-analyzer) and
Typescript (typescript-nvim). Learned a little bit
about installing plugins with neovim.

** React + Typescript: UI progress and porting webaudio bits
tasks: @!(taskref "demo-react-UI")!@, @!(taskref "how-big-are-react-apps")!@.

I've been trying to find excuses to learn React,
and now with suggestions from others, I'm learinng
Typescript too. So, I've been porting 

Spent time writing more
abstractions to match the slider groups in 
my singer UI. Did some initial work trying to get
the webaudio JS code ported to typescript.

Also, learned how to export npm projects to minified
JS. The total size of this app so far is 600kb, compared
to the 12kb for my vanilla JS demo. A little bit yikes,
but not unexpected. It is what it is.

** TeX backend for resume generator
I've been yak-shaving my resume by building a
new resume generator (as is tradition). I had
an older CV I wrote using plain TeX (yup, just
TeX, not LaTeX, because reasons), and used that
to build a TeX backend. Now my resume has a markdown
and TeX, and the markdown can be converted to HTML
via pandoc.

* Sunday, July 7th
@!(ref "logs" "logs" "2024_07_07")!@

Tasks: @!(taskref "consider-drawing-tablet")!@, @!(taskref "investigate-tic80-audio")!@, @!(taskref "drawing-tablet-demo")!@, @!(taskref "investigate-css-codestudy")!@,
@!(taskref "resume-setup")!@, @!(taskref "react-managing-state")!@.

TIC-80 Sound Code /
Drawing tablets for music? /
Planning next demo.

Bought a mini drawing tablet to use as a musical
interface, codestudy CSS debugging, studied audio
code in TIC80, project details to my resume.

* Monday, June 8th

@!(ref "logs" "logs" "2024_07_08")!@

Tasks: @!(taskref "resume-setup")!@,  @!(taskref "concept-concerto")!@, @!(taskref "investigate-tic80-audio")!@,
@!(taskref "drawing-tablet-experiments")!@, @!(taskref "react-managing-state")!@

tic80: buffers? /
staggered voice algorithm, /
wacom tablet fun

More studying of TIC-80 codebase to learn how audio
works there, talk with Chirag, parsing Wacom
Tablet events with libevdev, react reading (finished "managing state" yesterday), some planning of staggered
voice algorithm.

* Tuesday, June 9th

@!(ref "logs" "logs" "2024_07_09")!@

Drawing tablets. Lots /
of singing drawing tablets. /
So many tablets.

Tasks: @!(taskref "LC75-scraper")!@, @!(taskref "demo-react-UI")!@, @!(taskref
"drawing-tablet-experiments")!@,  @!(taskref "consider-poke-follow-up")!@ 

Borrowed two drawing tablets, managed to
get them both working on my Linux machine using
libevdev. Singing program written using a mix of
C (libevdev, libsoundio) and Rust (VoxBox).

Spent way too much time trying to build a web scraper
for the LC75 list. They really don't want you
to scrape their pages! Lots of tools used in my attempts:
wget, curl, selenium, jq, w3m.

More thoughts on Poke demo. Created some follow-up tasks.

Paired with Dan, got the rest of the typescript react
demo working.
