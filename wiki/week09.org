#+TITLE: Week 9

* Saturday, July 13th

@!(ref "logs" "logs" "2024_07_13")!@

Tasks: @!(taskref "tic80-sine-tone")!@.

A sine tone signal /
writes itself to a buffer / 
after many hours

It took many hours over many days, but
I finally figured out a decent entry point
to write a test sine tone to the DAC.

This took much, much longer than I expected.

Part of the reason this took so long was that
the engine was a little weird (but not as
weird as I initially thought). Like the rest of
the system, the TIC80 sound engine is written
like an 8-bit system, emulating how
sound chips worked at the time. To make these
chips work with modern audio systems with
high fidelity sound, a special library
is used (blip-buf), which is included in
the TIC-80 codebase. This was not an easy library
to figure out.

(I should mention that the only available documentation I
had here were the code comments, which were helpful).

The other reason it took so long (I'm a little
embarassed to admit this) is that I couldn't
find all the code I needed to see (I wasn't
searching in the right directory). In my hubris,
I simply declared early on that those structs were
dynamically generated with too many macros and
therefore considered "opaque". No no. It turns
out they were in fact, in a file somewhere in
one place. A lot of time was spent needlessly
black-boxing stuff to figure out what the data
was. Sigh.

* Sunday, July 14th

@!(ref "logs" "logs" "2024_07_13")!@

Wanted lines with sound /
Built the necessary tools /
Abandoned the Thought

Tasks: @!(taskref "add-day-titles")!@, @!(taskref "linear-gesture-interface")!@.

Retro-actively added some titles to my @!(ref "logs")!@.
I feel like there's something of a narrative now.

Most of yestreday was spent building a better programming
interface for signal processing algorithm I'm calling a
"linear gesture".
I was working on a composition, and I wanted to use
my Gesture algorithms to control effects like you
would an automation curve. I also wanted to use
my mnolth system, which meant I wanted to be able to
use C. But my stuff was written in Rust. So, the task
was to get some existing rust code in VoxBox working
with an existing C project. I ended up getting
sidetracked with conversatoins all day.
But, in the evening I did get it to work.

I ended up not using any of the code, and basically
just submitted the raw sketch of my composition
instead. I believe there is a lesson to be learned.
