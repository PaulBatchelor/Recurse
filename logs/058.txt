@2024-07-15 Day 58. Impossible Day. (AGAIN??)
24 days left of batch.

prev:

gesture with events /
unit tests for rust dagzet /
bytebeat stuff part two

---

next:

|| @!(taskref "impossible-day-2)!@: impossible day,
take 2: make a sound toy for the gameboy, and do it
in assembly.

@09:18 Morning Triage.

@09:37 Impossible Day Goals #impossible-day-2
This time around, I am hoping to learn how to
make some kind of musical instrument sound
toy for the gameboy. I want to do it in assembly,
and I want it to run on my analogue pocket.
If I build a ROM that allows me to push buttons
and make it actively control the APU somehow, I'd
call that a win.

@09:38 Publish

@09:50 Get Spirtualized GB/GBC on Pocket #impossible-day-2

@10:05 technical difficulties: clicking on roms doesn't load them #impossible-day-2
I click on it, and then they disappear.

@10:09 Checking hierarchy 
The bios I downloaded from retroarch was called gb_bios.bin,
but the README says it should be called dmb_bios.bin.
Let's see if that works.
---
It works!

@10:18 Curate some links. Scope. #impossible-day-2

@10:28 Installing RGBDS #impossible-day-2
Works!
--
Also tried some emulators. Does not work, yet.

@11:12 mgba is available on alpine, but maybe no sound? #impossible-day-2

@12:06 glitchy sound. sigh. #impossible-day-2

@13:02 Mostly reading part 1 of the tutorial #impossible-day-2 #timelog:01:01:29
Also skimming a few other documents while doing this.

@14:08 Maybe I can fix the audio buffer settings in mgba manually? #timelog:00:13:22
I can compile the source, let me see if the audio code can
change the buffer size.
---
I did find the code.
If anything, increasing the buffer size caused more issues.
Ugh. Linux, amiright?

@14:28 Trying to make the hello world make a sound. (nevermind) #impossible-day-2 #timelog:00:04:13
Actually, I'm going to do the part 2 tutorial now. I feel
like I need more context than what the docs are giving me,
and it would be nice to have something I know works.

@14:33 Doing part of second tutorial #impossible-day-2 #timelog:00:27:15
Got it displaying stuff with a Duck.
---
Thing is, 16:30 is coming up quickly, and sound is more
important than making a game. If I can figure out to just
get a pulse working, that'll be a success.

@15:11 Jumping back to sound #impossible-day-2 #timelog:01:14:10
Let's see if I can get an always on tone with unbricked,
then I'll feel like I've accomplished something original.

@15:33 Sound works in mgba, but not on openFPGA #impossible-day-2

@15:48 Looking at GBDK C examples now #impossible-day-2

@15:52 Trying the beep example. #impossible-day-2

@15:57 Nope wow compiling GBDK is too cursed #impossible-day-2

@16:09 I gotta see if this works on the actual cartridge or not #impossible-day-2
