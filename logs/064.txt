@2024-07-21 Day 64.
18 days left of batch.
---
I think Haikus have run their course.
---
Prev: briefly worked on rust Dagzet stuff @!(taskref "dagzet-rust")!@,
I have an idea of what I need to build out still to
get it working on the RC knowledge graph here: @!(ref "dz" "check it out")!@.
---
Next:

|| @!(taskref "dagzet-rust")!@: work on file range command,
in addition others.

|| @!(taskref "LC75")!@: study planning ideas

|| @!(taskref "demo-trio")!@: draft out voice
state machine

@08:50 Morning Triage.

@08:57 How can I work on this stuff offline? #LC75
Leetcode provides validation of solutions, which
is nice. But having a format that distills the
problems into something offline for reference
would be nice.
---
I think I might just manually transcribe the questions
to markdown and put them in a repo.

@09:03 good time to figure out pikchr? #demo-trio
I'm trying to more formally establish a way to
manage how the voice scheduling works for
trio.

@09:07 Publish

@09:16 Some initial inking of voice scheduler #demo-trio-voice-scheduler #timelog:00:49:09

@10:36 Attempts at initial code and tests #demo-trio-voice-scheduler

@11:23 How to set up event scheduling logic? #demo-trio-voice-scheduler #timelog:00:59:47
I have the basic actions and primitives
for the most part. Now, they need to be composed
and worked together to trigger events for
the other voices.
---
These events need to be triggered exactly once.
---
Event triggers at the start of a tick.
---
In a test, one should be able to tick() then
ask the state questions. Is the voice supposed to
launch? Is it playing already? Did the voice
just turn off? Is it supposed to turn off? Etc,
etc.
---
These events need to happen exactly once. Tick,
check and see if things need to be done, tick,
those things are done.
---
prev/curr state system could probably do this?
At each tick, update prev to be curr. So,
that means changes and probing would have to happen
together before the next tick?
