@2024-07-23 Day 65. Voice Scheduler Feature Complete. Rust Dagzet nearly feature complete.
17 days left of batch.
---
Prev: Work on new voice scheduling system for
Trio. File range command in Dagzet. I got to
play with this really cool haptic knob controller
(NANO-D evaluation kit)?
---
Next:

|| @!(taskref "dagzet-rust")!@: Finish up file range,
and work on the other remaining commands.

|| @!(taskref "demo-trio-voice-scheduler")!@: Continue
implementing triggers for specific events with tests.

@08:38 Morning triage.

@08:39 Clearly not getting around to this #LC75
I am putting it in "main" instead of priority.
---
Let me get these last few projects in a good
place (@!(taskref "demo-trio")!@ and @!(taskref
"dagzet-rust")!@), and then I'll try to find
time to start this?
---
I know, I know. I'm putting it off.

@08:56 getting ready to fix merge conflicts.

@09:07 Publishing

@09:20 Actually, before publishing, fix compeng page

@09:25 fixed logdb generator bottleneck
Classic mistake: forgot to add BEGIN/COMMIT

@09:31 file range table generation #dagzet-rust #timelog:00:07:14

@09:39 Off to implement hyperlinks #dagzet-rust #timelog:00:37:18

@10:16 TODO task #dagzet-rust #timelog:00:13:18

@10:30 Tags (tg) #dagzet-rust #timelog:00:31:30
This one is slightly more interesting because of
how the data is represented in SQLite vs how
it's entered in dagzet. From a dagzet point of
view, tags are a list of entries associated with
a node. In SQLite, they boil down into pairs.
---
Tags should be able to be called more than once.
---
I think I'm only going to have time for the initial
test before I break for lunch. Maybe.

@11:01 Test is breaking in a weird way. #dagzet-rust
I'm not sure why it's not getting the correct
number of tags? Oh well, will have to look at it
later.

@12:21 What is going on what this test #dagzet-rust #timelog:00:31:14
I was misinterpretting the boolean result of the hashset
insert method. Negating that fixed stuff.
---
tags finished.

@12:53 Attempts to move test to another place #dagzet-rust #timelog:00:08:11
I think for the most part these could be thought of
as integration tests.
---
Nevermind. I just won't fight it right now.

@13:03 Select node command is last on my list I think #dagzet-rust #timelog:00:12:18

@13:18 I think it's all implemented? Now for an initial replacement test #dagzet-rust #timelog:00:05:23

@13:21 Wow, I think it might have worked on the first go. #dagzet-rust
Installed with =cargo install --path .". Replaced
my lua program with my rust program. Looked around on
the generated ouput. It seems to be right so far?
Publishing to see what will happen.
---
Yeah, it says it is fine. so that's pretty cool.

@13:23 Adding a README #dagzet-rust #timelog:00:19:13

@13:43 I forgot about cx. #dagzet-rust
I've done enough for one session. It's almost there.

@13:45 I need to see it crash. #dagzet-rust #timelog:00:16:18
It should have crashed. Make it crash, then I'm done
for now.
---
oooh. the "dagzet" tool and "gendb.sh" are different.
I gotta replace it there.

@13:51 Okay it crashed because I forgot to escape. #dagzet-rust

@14:01 Lots more errors. This makes more sense now. Halting for now. #dagzet-rust
I need better error reporting. It seems like this version
of dagzet has stricter parsing (you can't have duplicate
tags, for example, whereas my old implementation could).

@14:13 Trio Triggers #demo-trio-voice-scheduler #timelog:01:24:34

@14:44 Already shooting myself in the foot with this code #demo-trio-voice-scheduler
Going to create an interface where hooks are automatically
appended and interated through.

@15:22 Working on UpperVoice now #demo-trio-voice-scheduler
Lower voice seems to behave as expected.

@15:53 UpperChange works as expected. Triggers are done #demo-trio-voice-scheduler

@15:55 Voice scheduler hookup #demo-trio-voice-scheduler #timelog:00:42:19

@16:39 Voice manager has been integrated into Trio! #demo-trio-voice-scheduler
Most of the event logic behaves as expected. I'm a little
stumped as to why is starts so late. But it feels a lot
better now. What's important is that I can reason about
it now, and construct simulations in a very precise way.
---
I think the event handler needed to reset the head/tail
indices as well. That fix seemed to clear up all the
gesture related issues which I was suspecting.

@19:21 Reading: Machine Language #read-elem-compsys #timelog:00:53:45
