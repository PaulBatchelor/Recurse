@2024-07-18 Day 60.
Prev:

event queue finished /
eventful gesture looming /
no more tic80
---
Next:

|| @!(taskref "demo-trio")!@: start work
implementing voice staggering.

|| @!(taskref "dagzet-rust")!@: continue onwards
with this

|| @!(taskref "read-elem-compsys")!@: more reading.

@08:12 Morning Triage

@08:39 complete in theory. time to test in trio demo. #event-driven-gesture #demo-trio
Attempt voice staggering using event-driven gesture
algorithm, see what goes wrong.

@08:47 dagzet could bea good portfolio project #dagzet-rust
It's got a good scope, it's got data structures, and
I'm putting in the time to incrementally test as
I go.
---
This is also a migration project. If I do this right,
I should be able to drop in the dagzet program
and have it replace my adhoc lua code for my
knowledge tree generator, which I'm using
to power the knowledge graph here.

@08:53 This has been completed #rust-neovim-setup

@08:54 Not today, vscode. Not today #vscode-rust-setup
vscode does not work on Alpine, and NeoVim
works well for my needs.

@09:05 publishing

@09:08 Oh my god there's a clippy book
See @!(dzref "rust/clippy_book")!@.

@09:34 connection shortcuts #dagzet-rust #timelog:01:03:58

@09:39 oh no, I'm getting my task tags wrong #dagzet-rust

@09:42 back on track. #dagzet-rust

@10:00 Reminding myself why string hashmaps are used for nodes #dagzet-rust
hashmaps are used as the data structure to ensure
that a node isn't created twice.
---
if I wanted to get a node name from a string,
how would I do that? Right now, the answer seems
to be enumerate through all the keys and find
an answer. I could also just make a separate
inverse lookup table out of a vector.

@10:20 I made an inverse lookup table #dagzet-rust
It's a memory hit, and there's room for
the eventual possibility that the tables will go out
of sync. But, it's good enough for now. I imagine
I'll be doing this lookup operatoin quite a few times
I don't want to do a linear sweep every time.
