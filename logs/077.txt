@2024-08-03 Day 77.
5 days left of batch.
@10:30 Late Morning Triage.
@10:59 Publishing.
@11:03 Investigate ftplay again. #investigate-ft2play
Looked into this a while back. Going to give
it another look today. @!(dzref "trackers/ft2play")!@.

@11:12 Let's look into ft2play #investigate-ft2play #timelog:00:42:46
I want to see if I can get this working
on my machine without any modificatoins.
From there, my hope is to try and remove
the SDL dependencies. Then, I'll re-assess the
codebase and see if there's anything else I
can do to simplify it.

@11:18 Builds and runs! #investigate-ft2play

@11:24 Studying the entry point. Isolate the wav renderer. #investigate-ft2play
I've also created a test file that renders and compares
outputs.

@11:31 I am making a Makefile. #investigate-ft2play

@11:34 There's a README on how to make drivers #investigate-ft2play
It might be quite easy actually to rip out SDL.

@11:37 makefile works. #investigate-ft2play

@11:39 Working on a dummy driver #investigate-ft2play

@11:40 Actually, before that, how does the wav rendering work? #investigate-ft2play

@11:44 WAVDump_Record is the entry point #investigate-ft2play
The thread is now gone. The code comments actually planned
for people like me.

@11:47 Let's see if I can get this dummy driver working quickly #investigate-ft2play
Dummy driver surprisingly straight forward. Really
seems unnecessary since we're just using WAV renderer.
SDL2 deps are gone it seems. I've also flattened the
directory a bit.
---
Much smoother than I expected it to be, really. Next up,
I'd love to rework the command line so it just something
like "ft2play in.xm out.wav". From there, import it into
mnolth?

@14:44 Improve the CLI of ft2play #investigate-ft2play #timelog:00:24:03

@15:02 simpler main created, now to remove the unused code #investigate-ft2play

@15:09 Let's turn on some warnings. #investigate-ft2play
I want to attempt to make the output reasonably
clean if before inserting into mnolth.
---
Hey, not too bad these warnings. Not too bad, 8bitbubsy.
---
Actually, all those warnings introduced were mine. Oops.
Very well done, 8bitbubsy. You are giving me a very enjoyable
experience here.

@15:17 Is it ANSI-compliant (AKA --std=c89)? #investigate-ft2play #timelog:01:24:21
Well, not it isn't. But nothing ever truely is.

@15:22 Rolling up my sleeves #investigate-ft2play
Once I got past the C++ comments, the real stuff started
to appear. Usual suspects.

@15:53 pmp_main builds with --std=c89 now. #investigate-ft2play

@16:02 trying to automate these comments a little bit. #investigate-ft2play

@16:03 actually, ow, no nevermind. #investigate-ft2play

@16:04 you know what. this ansification isn't worth it. I should stop. #investigate-ft2play
This is a waste of my time. It doesn't actually do much
for me for portability.

@16:06 dragging this into mnolth #investigate-ft2play

@16:45 imported to mnolth. #investigate-ft2play

@16:50 Add some colors #blob-coax #timelog:00:17:00
