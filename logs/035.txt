@2024-06-22 Day 35.
48 Days left of batch.
---
Thinkpad ordered yesterday. Should be arriving by the 28th,
So, I'll have about 40 days or so of use with it while
I'm here. I got a quote for the m1, and it was less
than I expected, so I might still do that. With the thinkpad,
I'll never have any days where I'm without a portable
computer. This is the important thing.
---
I was thinking all day about "A Blob Named Bucket", doing
research on game engines and graphics libraries, and
trying to get things to work on my Linux box. I think the
best contender so far is Sokol. I'm hoping to do most of
the game logic in Rust. A hybridized C + Rust approach
may work too, if I can get it all compiled down to a wasm
file working on the web.

@09:20 I turn on my computer and create this log file.

@09:27 Found this 2d sprite repo today with sokol/sdl. Looks perfect. #investigate-2d-gameengine
link: [[https://github.com/seyhajin/webgl2-wasm-sdl-sokol-sprite]].
---
WASM builds and runs okay with emcc. I was hoping it would
have had a sprite moving, but it's just projecting a static
texture.
---
I'm starting to feel diminishing returns, as this
"simple idea" might turn out to be not as simple as I
thought, and might require more time/focus than I have
right now.
---
Fail early. Fail often.

@09:55 Back to studying "sapp" #investigate-2d-gameengine #timelog:00:04:52
the "spine" examples seemed to be closest to what I was
looking for, but it turns out it's also not what I'm looking
for and intended for much larger games that I'd like to
build: [[http://en.esotericsoftware.com/spine-in-depth]].

@10:00 Trying out a Sokol add-on for 2d graphics someone made #investigate-2d-gameengine #timelog:00:12:07
link: [[https://github.com/edubart/sokol_gp]]
---
The OSX build in this makefile is out of date. Getting errors.
I'd like to see this work, so I'm going to try and get
this running on my Linux box. If that fails, I'm back
to just learning more about =sokol_gfx.h= and actually
reading the documentation.
---
Okay! The makefile works on my Linux box! Good. Progress.
---
Making a dagzet graph for sokol.

@10:17 Studying sokol_gfx more in depth #investigate-2d-gameengine
I want to get the text rendered to a PDF somehow, so I can
read it on my remarkable.
---
Learned about =:hardcopy= in vim. =:hardcopy > foo.ps=.
---
set popts+=number:y will include line numbers
---
There are two kinds of programmers: those who understand
why text editors have a "hardcopy" printing feature in
2024, and those who do not.
---
Uploaded PDF to Remarkable.

@10:30 Reading =sokol_gfx= header comments on remarkable #investigate-2d-gameengine #timelog:00:25:36

@13:00 Trying out Gate #investigate-2d-gameengine #timelog:00:34:10
Found this while looking up how to do pixel art on
OpenGL: [[https://github.com/SergiusIW/gate]]
---
running into linker problems.
---
Solved by adding =println!("cargo:rustc-linker-arg=-L/opt/homebrew/lib")=.
---
Now it is panicking because it can't find OpenGL/GLES library.
Probably something to do with it being a Mac?
---
Working out test file. [[https://stackoverflow.com/questions/26745284/cmake-not-finding-gl-h-on-os-x]]. This worked fine, though I had to change
the include file from =GL/gl.h= to =OpenGL/gl.h=.
---
Digging into gate library a little more, since it is just
SDL underneath it.
---
There's only so much stack tracing and debugging I can do
before I call it quits here. This is another nope.

@13:45 Another look at sokol gp on OSX #investigate-2d-gameengine #timelog:00:39:00
I think the sokol headers are out of date. OSX references
things like cocoa, new sokol headers references metal.
---
Nope. Fortunately, there's documentation on the build incantation
used to build =cube-sapp.c= in the sokol-samples repo:

===
#+BEGIN_SRC sh
cc sapp/cube-sapp.c -I ../fips-build/sokol-samples/sapp-metal-osx-make-release/sapp/ libs/sokol/sokol.m -o cube-sapp -DSOKOL_METAL -fobjc-arc -I ../sokol -I libs/ -framework Metal -framework Cocoa -framework MetalKit -framework Quartz -framework AudioToolbox
#+END_SRC
===
---
I want to update the Makefile in sokol gp to match this better
---
Made a build.sh script. Still getting a lot of weird metal-related
junk errors.
---
Took the clear-sapp example in the sokol-samples and gradually
added lines from the rectangle sample in the sokol gp
repo. We have a rotating rectangle now!

@15:50 Making decisions on file design #htmlize-codestudy-files #timelog:00:15:11
Files are stored in =dz_textfiles=.
---
Files given some sort of path, which can be analogous
to a dagzet namespace URL. I'd probably opt to replace things
like periods with underscores though.
---
Take something like =codestudy/potential/mag_sign.cpp=,
that could a page called =codestudy/potential/mag_sign_cpp=.
Some assumptions could be made that =codestudy/potential=
would already exist and that =mag_sign_cpp= wouldn't
be a pre-existing node.
---
A janet function could be written to generate the appropriate
HTML given a file path. This could then be called using
inline Janet, which could then be created procedurally
using a script.

@16:05 Bottoms-up: create initial render page. #htmlize-codestudy-files
Gosh there's so friction getting this to work cuz everything
is so connected. I wanted to just write Janet code, but
I needed other things, so I put it inside a placeholder org
file and ran parse, but the CSS parse path is wrong.

@16:37 We're going to need to re-work the HTML generator in weewiki.janet #htmlize-codestudy-files #timelog:00:32:04
I need to point to a brand new CSS file. Overwriting the
usual one isn't going to work. Stopping for now because
this will require fresh thinking.

@18:23 Reading #react-adding-interactivity #timelog:00:23:08

@19:14 Attempts to import small sokol gp example  #investigate-2d-gameengine

@19:41 Imported. Builds on OSX and Linux now. #investigate-2d-gameengine
