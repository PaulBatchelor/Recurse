@2025-01-16 Moving Day
@08:50 dagzet curation

@09:42 leetcode study #timelog:00:17:34
#! dz leetcode/problems/104_max_depth_binary_tree
As part of my practice here, I want to try outling
problems more and chunking them into more components.
---
I want to get back to trees, and picked this one from
the pile.
---
I decided this problem was too small to be worth doing
a code study on, but I did make a components subgraph?
We'll see if it's useful at all.

@10:11 110 #timelog:00:52:17
#! dz leetcode/problems/110_balanced_binary_tree

@10:30 I'm pretty sure I'm misunderstanding the problem
#! dz $
Test case failure. Drawing out the tree.

@10:31 Nevermind, needed a nonlocal variable
#! dz $

@10:33 Studying solution, outlining?
#! dz $

@11:18 That process took way too long
#! dz $
I hope I can get faster, or never look at this problem
again.

@11:21 leetcode codestudy re-org #timelog:00:44:20

@12:09 Leaf-similar trees #timelog:00:44:47
#! dz leetcode/problems/872_leaf_similar_trees

@12:12 today's intuition
#! dz $
This is a traversal problem. In-order traversal I think?
In-order is the one where the leaves will go left-to-right.
---
The simple way to do this is to produce a function
that produces a in-order list of leaves for both trees, then
compares the lists. I'm going to do that.
---
There might be a more clever approach involving comparing
both trees at the same time during traversal, but I lack
the intuition for that.

@12:32 My initial approach was correct, editorial is fancy
#! dz $
Doing a codestudy now. Generator/yield is still new to me.

@13:34 Looking into TeaTime as a codestudy #timelog:00:45:00

@14:03 Used in code snippets for dzbrowse
#! dz python/docs/stdlib/markup/html/escape
I was trying to figure out why some code wasn't showing
up. It turns out this is the first time I was using
dzbrowse on HTML code.
