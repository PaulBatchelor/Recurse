ns python
gr stuff about python

nn walrus_operator
hl https://docs.python.org/3/whatsnew/3.8.html#assignment-expressions
ln the walrus operator
rm this came up while looking up how to parse a file line-by-line
rm in python.

nn timsort
hl https://en.wikipedia.org/wiki/Timsort
ln Timsort: the underlying algorithm used by Python for
ln =sort= and =sorted=.
rm Found via Fluent Python, via EV

nn heapsort_examples
hl https://docs.python.org/3/library/heapq.html#basic-examples
ln heapsort examples

nn docs/stdtypes
hl https://docs.python.org/3/library/stdtypes.html
ln Standard Types

nn docs/stdtypes/str
hl https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str

nn docs/stdtypes/str/isalnum
hl https://docs.python.org/3/library/stdtypes.html#str.isalnum
ln str.isalnum(): Return True if all characters in the 
ln string are alphanumeric and there is at least one 
ln character, False otherwise. A character c is 
ln alphanumeric if one of the following returns True: 
ln c.isalpha(), c.isdecimal(), c.isdigit(), or 
ln c.isnumeric().
co $ docs/stdtypes/str

nn flashcards/alphanumeric
zz TODO: make ln an optional type in html output
zz ln Alphanumeric Flashcard
ff What method is used to tell if a string is only alphanumeric?
fb isalnum()
co $ docs/stdtypes/str/isalnum

nn docs/stdtypes/str/isalpha
hl https://docs.python.org/3/library/stdtypes.html#str.isalpha
ln str.isalpha(): Return True if all characters in the 
ln string are alphabetic and there is at least one 
ln character, False otherwise.
co $ docs/stdtypes/str

nn flashcards/alphabetic
ff What method is used to tell if a string contains only alphabetic characters?
fb isalpha()
co $ docs/stdtypes/str/isalpha

nn docs/stdtypes/str/isnumeric
hl https://docs.python.org/3/library/stdtypes.html#str.isnumeric
ln str.isalpha(): Return True if all characters in the 
ln string are alphabetic and there is at least one 
ln character, False otherwise. 
co $ docs/stdtypes/str

nn flashcards/numeric
ff What method is used to tell if a string contains only numeric characters?
fb isnumeric()
co $ docs/stdtypes/str/isnumeric

nn docs/stdtypes/str/lower
hl https://docs.python.org/3/library/stdtypes.html#str.lower
ln Return a copy of the string with all the cased characters
ln converted to lowercase.
co $ docs/stdtypes/str

nn flashcards/lowercase
ff How does one convert a string to lowercase in python?
fb str.lower()
co $ docs/stdtypes/str/lower

nn docs/stdtypes/str/upper
hl https://docs.python.org/3/library/stdtypes.html#str.upper
ln Return a copy of the string with all the cased characters
ln converted to uppercase.
co $ docs/stdtypes/str
co $ docs/stdtypes/str/lower

nn flashcards/uppercase
ff How does one convert a string to uppercase in python?
fb str.upper()
co $ docs/stdtypes/str/upper

nn docs/stdlib/filter
hl https://docs.python.org/3/library/functions.html#filter
ln filter(function, iterable): Construct an iterator from those elements 
ln of iterable for which function is true. iterable may 
ln be either a sequence, a container which supports 
ln iteration, or an iterator. 
co $ docs/stdlib

nn docs/stdlib
ln Python standard library

nn docs/stdlib/map
hl https://docs.python.org/3/library/functions.html#map
ln map(function, iterable, *iterables): Return an 
ln iterator that applies function to every item of 
ln iterable, yielding the results. If additional 
ln iterables arguments are passed, function must take 
ln that many arguments and is applied to the items from 
ln all iterables in parallel.
co $ docs/stdlib/filter
cr map/filter pairing
co $ docs/stdlib

nn docs/reference
hl https://docs.python.org/3/reference/index.html
ln Language reference

nn docs/reference/expressions
ln Chapter 6: expressions
co $ docs/reference

nn docs/reference/expressions/lambda
ln Lambda expressions (sometimes called lambda forms) are
ln used to create anonymous functions. 
hl https://docs.python.org/3/reference/expressions.html#lambda
co $ docs/reference/expressions
co $ docs/stdlib/map
co $ docs/stdlib/filter

nn docs/stdtypes/list
ln List
hl https://docs.python.org/3/library/stdtypes.html#list
co $ docs/stdtypes

nn docs/stdtypes/common_sequence_ops
ln Common sequence operations
hl https://docs.python.org/3/library/stdtypes.html#list
co $ docs/stdtypes/list

nn double_colon_reverse
ln x[::-1] can be used to reverse items in a list
co $ double_colon_operator
td What's the difference between this and reverse()?

nn double_colon_operator
ln double colon operator: x[start:stop:step]
co $ docs/stdtypes/common_sequence_ops

nn docs/stdlib/data_types
ln Data types modules
hl https://docs.python.org/3/library/datatypes.html
co $ docs/stdlib

nn docs/stdlib/data_types/collections
ln Collections
hl https://docs.python.org/3/library/collections.html
co $ docs/stdlib/data_types

nn docs/stdlib/data_types/collections/counter
ln Counter()
hl https://docs.python.org/3/library/collections.html#collections.Counter
co $ docs/stdlib/data_types/collections

nn docs/glossary/hashable
hl https://docs.python.org/3/glossary.html#term-hashable
ln An object is hashable if it has a hash value which 
ln never changes during its lifetime (it needs a 
ln __hash__() method), and can be compared to other 
ln objects (it needs an __eq__() method). Hashable 
ln objects which compare equal must have the same hash 
ln value.

nn docs/stdtypes/set
hl https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset
ln Sets and frozensets
co docs/glossary/hashable $
cr it turns out many can be hashable in python, and therefore
cr work with a set

nn docs/stdtypes/frozenset
hl https://docs.python.org/3/library/stdtypes.html#frozenset
co $ docs/stdtypes/set

nn docs/stdtypes/generator
hl https://docs.python.org/3/library/stdtypes.html#generator-types
ln generator type

nn docs/glossary/generator
hl https://docs.python.org/3/glossary.html#term-generator
ln generator: function which returns a generator iterator
co $ docs/stdtypes/generator
cr definition

nn docs/stdtypes/str/format
hl https://docs.python.org/3/library/stdtypes.html#str.format
ln str.format(): produces formatted string
co $ docs/stdtypes/str

nn docs/stdlib/int
hl https://docs.python.org/3/library/functions.html#int
ln int() constructor
rm 2 args is base. int("11", 2) would be a value in binary,
ln base 2.

nn docs/stdtypes/str/zfill
hl https://docs.python.org/3/library/stdtypes.html#str.zfill
ln str.zfill(widht): return copy of the string left-filled
ln with ascii '0' digits to make string of lenght =width=.

nn docs/stdlib/bin
hl https://docs.python.org/3/library/functions.html#bin
ln bin(): convert an integer number to a binary string
ln prefixed with "0b".

nn docs/reference/simple_statements
hl https://docs.python.org/3/reference/simple_stmts.html
ln Chapter 7: simple statements
co $ docs/reference

nn docs/reference/simple_statements/nonlocal
hl https://docs.python.org/3/reference/simple_stmts.html#the-nonlocal-statement
co $ docs/reference/simple_statements
ln nonlocal: causes listed identifiers to refer to names
ln previously bound in nonlocal scope

nn repeat_strings
ln x = "hello", x*3 would be "hellohellohello"

nn docs/stdlib/re
ln re: regular expressions
hl https://docs.python.org/3/library/re.html
co $ ..

nn docs/stdlib/re/sub
hl https://docs.python.org/3/library/re.html#re.sub
ln re.sub(pattern, repl, string, count=0, flags=0):
ln Return the string obtained by replacing the leftmost 
ln non-overlapping occurrences of pattern in string by 
ln the replacement repl.
co $ ..

nn docs/stdlib/math
hl https://docs.python.org/3/library/math.html
ln math

nn docs/stdlib/math/gcd
hl https://docs.python.org/3/library/math.html#math.gcd
ln gcd(*integers): get greatest common divisor of two integers
co $ ..

nn docs/stdtypes/str/split
hl https://docs.python.org/3/library/stdtypes.html#str.split
ln split
rm if no delimiter provided, the algorithm changes and
rm will split on variable whitespace

nn boolean_value_coercion
ln Boolean values can be coerced to ints using int().
ln int(True) is 1, int(False) is 0.

nn docs/stdtypes/set/intersection
hl https://docs.python.org/3/library/stdtypes.html#frozenset.intersection
ln set.intersection(), set & other
co $ ..

nn docs/stdtypes/set/difference
hl https://docs.python.org/3/library/stdtypes.html#frozenset.difference
ln set.difference(), set - other

nn pop_on_empty_stack
ln Pop on empty stack: stk.pop() if stk else None

nn docs/reference/while
hl https://docs.python.org/3/reference/compound_stmts.html#the-while-statement
ln while statement
rm while can have an extra "else" clause
