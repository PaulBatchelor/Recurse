ns DDIA/toc
gr Reading Notes: Designing Data-Intensive Applications

nn 1_foundations_of_data_systems
ln Part 1: Foundatoins of Data Systems

nn 2_distributed_data
ln Part 2: Distributed Data

nn 3_derived_data
ln Part 3: Derived Data

ns DDIA/toc/1_foundations_of_data_systems

nn 01_reliable_scalable_maintainable
ln Chapter 1: reliable, scalable, and maintainable applications
co $ ..

nn 02_data_models_query_languages
ln Chapter 2: data models and query languages
co $ ..

nn 03_storage_and_retrieval
ln Chapter 3: storage and retrieval
co $ ..

nn 04_encoding_evolution
ln Chapter 4: encoding and evolution
co $ ..

ns DDIA/toc/2_distributed_data

nn 05_replication
ln Chapter 5: Replication
co $ ..

nn 06_partitioning
ln Chapter 6: partitioning
co $ ..

nn 07_transactions
ln Chapter 7: transactions
co $ ..

nn 08_trouble_distributed_systems
ln Chapter 8: the trouble with distribtued systems
co $ ..

nn 09_consistency_consensus
ln Chapter 9: Consistency and consensus
co $ ..

ns DDIA/toc/3_derived_data

nn 10_batch_processing
ln Chapter 10: Batch Processing
co $ ..

nn 11_stream_processing
ln Chapter 11: Stream Processing
co $ ..

nn 12_future_data_systems
ln Chapter 12: The future of Data Systems
co $ ..

ns DDIA

nn glossary
ln Glossary

nn glossary/functional_requirements
ln Functional requirements: what it should do, such as
ln allowing data to be sored, retrieved, searched, and
ln processed in various ways.
co $ ..
co $ ../../toc/1_foundations_of_data_systems/01_reliable_scalable_maintainable

nn glossary/nonfunctional_requirements
ln nonfunctional requirements: general properties like
ln security, reliablity, compliance, scalability,
ln compatability, maintainability
co $ ..
co $ ../../toc/1_foundations_of_data_systems/01_reliable_scalable_maintainable

nn glossary/reliability
ln Reliability: making systems work correctly, even when
ln faults occur.
co $ ..
co $ ../../toc/1_foundations_of_data_systems/01_reliable_scalable_maintainable

nn glossary/scalability
ln Scalability: having strategies for keeping performance
ln good, even when load increases.
co $ ..
co $ ../../toc/1_foundations_of_data_systems/01_reliable_scalable_maintainable

nn glossary/maintainability
ln Maintainability: making life better for engineering and
ln operations teams who need to work with the system.
co $ ..
co $ ../../toc/1_foundations_of_data_systems/01_reliable_scalable_maintainable

nn glossary/relational_database
ln Relational Database: invented to solve "many-to-many" problem
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages

nn glossary/nosql
ln NoSQL Datastores
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages

nn glossary/document_database
co $ ../nosql
ln Document Database: targets use cases where data comes in
ln self contained documents and relationships between
ln one document and another are rare.
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages

nn glossary/graph_database
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages
co $ ../nosql
ln Graph Database: useful for cases where data where anything
ln is potentially related to everything

nn glossary/data_model
ln Data Model
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages

nn glossary/query_language
ln Query Language
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages

nn tools
ln tools

nn tools/SQL
ln SQL
co $ ../../glossary/query_language
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages

nn tools/MapReduce
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages
co $ ../../glossary/query_language
ln MapReduce

nn tools/monogdb_aggregration_pipeline
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages
co $ ../../glossary/query_language
ln MongoDB aggregation pipeline

nn tools/cyper
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages
co $ ../../glossary/query_language
ln Cypher

nn tools/SPARQL
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages
co $ ../../glossary/query_language
ln SPARQL

nn tools/datalog
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages
co $ ../../glossary/query_language
ln Datalog


nn tools/CSS
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages
co $ ../../glossary/query_language
cr not a DB query language, but intersting parallel
ln CSS

nn tools/XSL_XPath
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages
co $ ../../glossary/query_language
cr not a DB query language, but intersting parallel
ln XSL/XPath

nn glossary/sequence_similarity_search
ln Sequence Similarity Search: taking one long string (such
ln as a DNA molecule), and matching it against a large
ln database of strings that are similar, but not identical
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages

nn glossary/full_text_search
ln Full Text Search: arguably a kind of data model used
ln alongside databases.
co $ ..
co $ ../../toc/1_foundations_of_data_systems/02_data_models_query_languages
