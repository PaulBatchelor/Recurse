ns system_design_interview
gr reading notes: system design interview

ns system_design_interview/toc
gr Table of Contents

nn 01_proximity_service
ln Chapter 1: proximity Service

nn 02_nearby_friends
ln Chapter 2: Nearby Friends

nn 03_google_maps
ln Chapter 3: Google Maps

nn 04_distributed_message_queue
ln Chapter 4: Distribtued Message Queue

nn 05_metrics_monitoring_and_alert_system
ln Chapter 5: Metrics monitoring and alert system

nn 06_ad_click_event_aggregation
ln Chapter 6: ad click event aggreegation

nn 07_hotel_reservation_system
ln Chapter 7: Hotel reservation system

nn 08_distributed_email_service
ln Chapter 8: Distributed Email Service

nn 09_s3_object_storage
ln Chapter 09: S3-like object storage

nn 10_real_time_gaming_leaderboard
ln Chapter 10: real-time gaming leaderboard

nn 11_payment_system
ln Chapter 11: payment system

nn 12_digital_wallet
ln Chapter 12: digital wallet

nn 13_stock_exchange
ln Chapter 13: stock exchange

zz Steps 1 and 2

ns system_design_interview/toc/01_proximity_service

nn step1
ln step 1
co $ ..

nn step1/func_reqs
ln function requirements
co $ ..
co $ ../../../../glossary/functional_requirement

nn step1/func_reqs/return_nearby_business
ln return nearby businesses
co $ ..

nn step1/func_reqs/view_business
ln view a business
co $ ..

nn step1/func_reqs/add_del_update_business
ln Add/delete/update a business
co $ ..

nn step1/nonfunc_reqs
ln non-functional requirements
co $ ..
co $ ../../../../glossary/non_functional_requirement

nn step1/nonfunc_reqs/low_latency
ln low latency
co $ ..

nn step1/nonfunc_reqs/data_privacy
ln Data Privacy
co $ ..

nn step1/nonfunc_reqs/5k_search_qps
ln 5000 search sqps
co $ ..

nn step2
ln step2
co $ ..

nn step2/api_design
ln API Design
co $ ..
co $ ../../../../glossary/REST

nn step2/high_level_design
ln High level design diagram
co $ ..

nn step2/high_level_design/load_balancer
ln Load Balancer
co $ ..
co $ ../../../../../glossary/load_balancing

nn step2/high_level_design/LBS
ln LBS: location based service
co ../load_balancer $
co $ ..

nn step2/high_level_design/business_service
ln Business Service
co ../load_balancer $
co $ ..

nn step2/high_level_design/database_cluster
ln Database Cluster
co ../business_service $
co ../LBS $

nn step2/data_model
ln Data Model
co $ ..
co $ ../../../../glossary/data_model

nn step2/data_model/rw_ratio
ln R/W ratio: high read volume due to search
ln and viewing details for business. Write volume
ln is low because adding/removing businesses is
ln infrequent
co $ ../../../../../tools/mysql
cr good fit for read-heavy systems

nn step2/algorithms
ln Varous algorithms for exploring nearby businesses
co $ ..
co $ ../../../../tools/redis_geohash
co $ ../../../../tools/postgres_postgis

nn step2/algorithms/1_two_dimensional_search
ln Option 1: two-dimensional search
co $ ..

nn step2/algorithms/2_evenly_divided_grid
ln Option 2: evenly divided grid
co $ ..

nn step2/algorithms/3_geohash
ln Option 3: geohash
co $ ../../../../../glossary/geohash
co $ ..

nn step2/algorithms/4_quadtree
ln Option 4: quadtree
co $ ..
co $ ../../../../../glossary/quadtree

nn step2/algorithms/5_google_s2
ln Google S2
co $ ..
co $ ../../../../../tools/s2_geometry

nn step2/api_design/search
ln API for search
co $ ..

nn step2/api_design/businesses
ln API for businesses
co $ ..

nn step2/api_design/pagination
ln API for pagination
co $ ..

ns system_design_interview/toc/02_nearby_friends

nn step1
ln step 1
co $ ..

nn step1/func_reqs
ln functional requirements
co $ ..

nn step1/func_reqs/view_nearby_friends
ln View nearby friends
co $ ..

nn step1/func_reqs/udpate_nearby_friend_list
ln Update nearby friend list
co $ ..

nn step1/nonfunc_reqs
ln non-functional requirements
co $ ..

nn step1/nonfunc_reqs/low_latency
ln Low-latency
co $ ..

nn step1/estimation/radius_5_mile
ln 5-mile radius
co $ ..

nn step1/estimation/location_refresh_interval_30s
ln Location refresh interval: 30s
co $ ..

nn step1/estimation/locate_update_334k_qps
ln Locate update: 334k qps

nn step1/estimation
ln estimation
co $ ..

nn step2
ln step2
co $ ..

nn step2/high_level_design
ln High level design diagram
co $ ..

nn step2/high_level_design/load_balancer
ln Load Balancer
co $ ..
co $ ../../../../../glossary/load_balancing

nn step2/high_level_design/RESTful_API_servers
ln RESTful API servers
co $ ..
co $ ../../../../../glossary/REST
co ../load_balancer $

nn step2/high_level_design/websocket_servers
ln WebSocket Servers
co $ ..
co $ ../../../../../glossary/websocket

nn step2/high_level_design/location_cache
ln Redis location cache
co $ ..
co ../websocket_servers $

nn step2/high_level_design/redis_pub_sub
ln Redis Pub/Sub server
co $ ../../../../../tools/redis_pub_sub
co ../websocket_servers $

nn step2/periodic_location_update
ln Periodic location update
co $ ..

nn step2/api_design
ln API Design
co $ ..

nn step2/api_design/websocket
ln API Design for the web socket protocol
co $ ..

nn step2/api_design/websocket/1_periodic_location_update
ln Periodic Location Update
co $ ..

nn step2/api_design/websocket/2_client_receives_location_updates
ln Client receives location updates
co $ ..

nn step2/api_design/websocket/3_websocket_initialization
ln websocket initializaton
co $ ..

nn step2/api_design/websocket/4_subscribe_new_friend
ln Subscribed to new friend
co $ ..

nn step2/api_design/websocket/5_unsubscribe_new_friend
ln unsubscribe a friend
co $ ..
co $ ../4_subscribe_new_friend

nn step2/api_design/http_requests
ln http requests
co $ ..
rm this is pretty vague and adhoc, not an important
rm aspect for this design

nn step2/api_design/http_requests/add_remove_friends
ln add/remove friends
co $ ..

nn step2/api_design/http_requests/update_user_profile
ln update user profile
co $ ..

nn step2/data_model
ln Data Model
co $ ..

ns system_design_interview/toc/03_google_maps

nn step1
ln step 1
co $ ..

nn step1/func_reqs
ln functional requirements
co $ ..

nn step1/func_reqs/user_location_update
ln User Location Update
co $ ..

nn step1/func_reqs/navigation_service
ln Navigation Service
co $ ..

nn step1/func_reqs/map_rendering
ln Map Rendering
co $ ..

nn step1/nonfunc_reqs
ln non-functional requirements
co $ ..

nn step1/nonfunc_reqs/highly_accurate
ln Highly accurate
co $ ..

nn step1/nonfunc_reqs/smooth_navigation
ln Smooth navigation
co $ ..

nn step1/nonfunc_reqs/data_usage
ln Data Usage
co $ ..

nn step1/estimation
ln estimation
co $ ..

nn step1/estimation/storage
ln Storage
co $ ..

nn step1/estimation/server_traffic
ln Server Traffic
co $ ..

nn step2
ln step2
co $ ..

nn step2/high_level_design
ln High level design diagram
co $ ..

nn step2/map_101
ln map 101
co $ ..
co $ ../../../../glossary/geocoding
co $ ../../../../glossary/geohash

nn step2/map_101/road_data_processing_navigation
ln Road data processing for navigation algorithms
co $ ../../../../glossary/A_star_algorithm

nn step2/map_101/positioning_system
ln Positioni System
co $ ..

ns system_design_interview

nn glossary/functional_requirement
hl https://en.wikipedia.org/wiki/Functional_requirement
ln Functional Requirement: defines a function of a
ln system or component, where a function is described
ln as a summary/specification/statement of behavior
ln between inputs and outputs
co $ ..
ff What is a functional requirement?
fb A functional requirement is a requirement of a system
fb that defines a function of a component, a behavior
fb between inputs and outputs
rm Every system here begins with listing the functional
rm and non-functional requirements
co $ glossary/systems_engineering
cr context of

nn glossary
ln Keywords found while studying this book

nn glossary/systems_engineering
hl https://en.wikipedia.org/wiki/Systems_engineering
ln Systems engineering: an interdisciplinary field of
ln engineering and engineering management that focuses
ln on how to design, integrate, and manage complex
ln systems

nn glossary/non_functional_requirement
hl https://en.wikipedia.org/wiki/Non-functional_requirement
ln Non-functional requirement (NFR): a requirement that
ln specifies criteria that can be used to judge the
ln operation of a system, rather than specific behaviors.
co $ glossary/functional_requirement
ff what is non-functional requirement?
fb A non-functional requirement is a requirement
fb is used to judge the operation of a system, such
fb as safety, security, performance, testability, etc.
co $ ..

nn references/NFR_examples
hl https://en.wikipedia.org/wiki/Non-functional_requirement#Examples
ln Examples of non-functional requirements
co $ glossary/non_functional_requirement

nn references
ln Various references and sources about certain topics.
ln this should ideally link to keywords defined in the
ln glossary.
co $ ../glossary
cr references should attach to keywords in glossary

nn glossary/requirements_engineering
hl https://en.wikipedia.org/wiki/Requirements_engineering
co glossary/functional_requirement $
co glossary/non_functional_requirement $
ln Requirements Engineering: the process of defining,
ln documenting, and maintaining requirements in the
ln engineering design process.
ff What is requirements engineering?
fb The process of definining, documenting, and maintaining
fb requirements in the engineering design process
co $ glossary/systems_engineering

nn glossary/engineering_design_process
hl https://en.wikipedia.org/wiki/Engineering_design_process
co $ glossary/requirements_engineering
ln Engineering Design Process, or Engineering Method:
ln is a common series of steps that engineers use in
ln creating functional products and processes.

nn glossary/http_request_methods
hl https://en.wikipedia.org/wiki/HTTP#Request_methods
ln HTTP Request Methods: "verbs" in the HTTP protocol to
ln indicate the desired action to be performed on the
ln desired resource. Examples include GET, POST, PUT,
ln and DELETE.

nn references/RFC2616_http_methods
hl https://datatracker.ietf.org/doc/html/rfc2616#section-9
ln RFC2616 Section 9: http methods
co $ glossary/http_request_methods
cr Relevant section in RFC

nn glossary/REST
hl https://en.wikipedia.org/wiki/REST
ln REST: Representational State Transfer, is a software
ln architectural style that was created to guide the
ln design and development 
co ../http_request_methods $
cr REST is commonly associated with HTTP-based APIs
cr utilizing HTTP methods or "verbs"

nn glossary/data_model
hl https://en.wikipedia.org/wiki/Data_model
ln Data Model: an abstract model that organizes data
ln and standardizes how it relates to real world
ln entities.

nn glossary/software_architecture
hl https://en.wikipedia.org/wiki/Software_architecture
ln Software Architecture: set of structures needed
ln to reason about a software system and the discipline
ln of creating such structures and systems.

nn tools/mysql
hl https://en.wikipedia.org/wiki/MySQL
ln MySQL: open source relational database management system
co $ ..

nn tools
ln various tools and software used

nn glossary/RDBMS
ln RDBMS: relational database management system.
co ../../tools/mysql $
co $ ..

nn glossary/load_balancing
hl https://en.wikipedia.org/wiki/Load_balancing_(computing)
ln Load balancing: the process of distributing a set of 
ln tasks over a set of resources, with the aim of 
ln optimizing response time and avoiding unevenly 
ln overloading some compute nodes while others are left 
ln idle.
ff What does a load balancer do?
fb A load balancer is a component in a system that
fb distributes a set of tasks over a set of resources.
co $ ..

nn glossary/QPS
ln QPS: queries per second
co $ ..

nn glossary/geohash
hl https://en.wikipedia.org/wiki/Geohash
ln Geohash: a string of letters and numbers used to 
ln represent a geographic location. It is a simple way to 
ln encode location data and is particularly useful for 
ln pinpointing specific locations. 
co $ ..

nn glossary/quadtree
hl https://en.wikipedia.org/wiki/Quadtree
ff quadtree: a tree data structure that partitions a 
ln two-dimensional space by recursively subdividing it 
ln into four quadrants or regions. Each node in the tree 
ln has at most four children, and leaf nodes store data. 
co $ ..

nn tools/s2_geometry
hl http://s2geometry.io/
ln Google s2: a library for spherical geometry

nn tools/redis_geohash
hl https://redis.io/docs/latest/commands/geohash/
ln Redis Geohash

nn tools/postgres_postgis
hl https://postgis.net/
ln PostGIS

nn glossary/websocket
ln WebSocket: a computer communications protocol, that
ln allows for two-way, realtime interaction between
ln a web browser and a server.
hl https://en.wikipedia.org/wiki/WebSocket
ff What is a websocket?
fb A websocket is a computer communications protocol,
fb that allows for two-way, realtime interaction between
fb a web browser and a server.

nn glossary/redis
ln Redis: Remote Dictionary Server.
ln Redis is a versatile, in-memory key-value
ln database storage system
ln designed for fast data retrieval and manipulation. 
ln It's used as a cache, message broker, and database, 
ln offering low-latency operations and durability.
hl https://en.wikipedia.org/wiki/Redis
ff What is Redis?
fb Redis is an in-memory storage system

nn glossary/distributed_cache
ln Distributed Cache: extension of a the traditional
ln concept of a cache used in a single locale.
ln A distributed cache may span multiple servers so that 
ln it can grow in size and in transactional capacity.
co $ ../redis
ff What is a distributed cache?
fb Extending on the concept of a traditional cache in
fb a single locale, a distributed cache is a cache that
fb may span multiple servers so that it can grow in size
fb and capacity.
fb A distributed cache 

nn glossary/message_broker
ln Message Broker: an intermediary computer program that
ln translates messages from one formal messaging protocol
ln to another, enabling communication between software
ln applications that use different communications protocols
co $ ../redis
ff what is a message broker?
fb A message broker is an intermediate program that
fb granslates messages from one protocol to another.

nn tools/redis_pub_sub
hl https://redis.io/glossary/pub-sub/
ln Redis Pub/Sub: messaging technology that faciliates
ln communication between different components in a
ln distributed system.
rm Link has thorough explanations of pub/sub and usage
rm within redis.

nn glossary/publish_subscribe
hl https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern
ln publish-subscribe: a messaging pattern where publishers
ln categorize messages into classes that are received
ln by subscribers.

nn glossary/geocoding
hl https://en.wikipedia.org/wiki/Address_geocoding
ln Geocoding: the process of converting addresses to
ln geographic coordinates

nn glossary/A_star_algorithm
hl https://en.wikipedia.org/wiki/A*_search_algorithm
ln A* algorithm: A* (pronounced "A-star") is a graph 
ln traversal and pathfinding algorithm that is used in 
ln many fields of computer science due to its 
ln completeness, optimality, and optimal efficiency

nn glossary/dijkstras_algorithm
hl https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm
ln Dijkstra's algorithm is an algorithm for finding the 
ln shortest paths between nodes in a weighted graph, 
ln which may represent, for example, a road network.
